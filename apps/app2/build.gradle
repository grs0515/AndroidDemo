apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.android.compileSdkVersion
    buildToolsVersion rootProject.android.buildToolsVersion

    defaultConfig {
        applicationId "com.grs.app"
        minSdkVersion rootProject.android.minSdkVersion
        targetSdkVersion rootProject.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //定义一个装apk文件路径的数组
    def fileArray = []
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.contains('release')) {
                //获取每个打包产物
                def variantProd = variant.productFlavors[0]
                def fileName = "testname_${variantProd.versionName}_${variantProd.versionCode}" + "_${variantProd.name}.apk"
                println "自定义输出apk的名字:" + fileName;
                outputFileName = fileName;
                println "输出apk地址:" + outputFile.parentFile.absolutePath + java.io.File.separator + fileName
                fileArray.add(outputFile.parentFile.absolutePath + java.io.File.separator + fileName);
            }

        }
    }

    lintOptions {
        abortOnError false
    }
    signingConfigs {
        sign {
            keyAlias 'sign'
            keyPassword '123456'
            storeFile file('../../config/sign.keystore')
            storePassword '123456'
        }
    }
    //根据项目工程配置出不同的包
    flavorDimensions "app"
    productFlavors {
        appTest1 {
            applicationId "com.grs.app1"
            dimension "app"
            versionCode 1
            versionName "1.0"
            signingConfig signingConfigs.sign
        }
        appTest2 {
            applicationId "com.grs.app2"
            dimension "app"
            versionCode 1
            versionName "2.0"
            signingConfig signingConfigs.sign
        }
    }


    build {
        doLast() {
            println "任务1编译打包完成后需要复制apk的数量:" + fileArray.size()
            forEachFile(fileArray)
        }
    }


}


def forEachFile(fileArray) {
    fileArray.forEach { file ->
        //遍历进行文件操作
        println "任务3遍历apk文件"
        rename_and_moveout_apk(file)
    }
}


def rename_and_moveout_apk(orignalFile) {
    def intoFile = rootDir.getAbsolutePath() + File.separator + "apk"
    copy {
        from orignalFile
        into intoFile
        println "任务4复制apk到指定位置:" + intoFile
        rename("${android.defaultConfig.versionName}_${android.defaultConfig.versionCode}_", "")
        println "任务5修改apk的命名"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies["appcompat_v7"]
    implementation rootProject.ext.dependencies["constraint_layout"]
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}


