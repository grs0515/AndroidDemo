apply plugin: 'com.android.application'
apply from: '../../plugin/build_plugin.gradle'
apply from: "../../plugin/build_extra.gradle"
apply from: "../../plugin/build_dir.gradle"

android {

    compileSdkVersion rootProject.android.compileSdkVersion
    buildToolsVersion rootProject.android.buildToolsVersion

    defaultConfig {
        applicationId "com.grs.app2"
        minSdkVersion rootProject.android.minSdkVersion
        targetSdkVersion rootProject.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    greeting {
        message = "I am dynamic message"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
    signingConfigs {
        sign {
            keyAlias 'sign'
            keyPassword '123456'
            storeFile file('../../config/sign.keystore')
            storePassword '123456'
        }
    }
    //根据项目工程配置出不同的包
    flavorDimensions "app"
    productFlavors {
        appTest1 {
            applicationId "com.grs.app1"
            dimension "app"
            versionCode 1
            versionName "1.0"
            signingConfig signingConfigs.sign
        }
        appTest2 {
            applicationId "com.grs.app2"
            dimension "app"
            versionCode 1
            versionName "2.0"
            signingConfig signingConfigs.sign
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
}

/**
 * 当bulid被添加执行时调用
 */
tasks.whenTaskAdded { task ->
    println '----执行了---'+task.name
    if (task.name.equals("signingReport")) {
        println '----最后---'+task.name
    }
}
//build评估之后调用 在android.applicationVariants.all之后
afterEvaluate {
    println "----执行了---afterEvaluate"
//    tasks.findByName('assembleDebug').finalizedBy(createSharedDependency)
}
build {
    doLast() {
        println "----执行了---assemble"
//        dependsOn 'copyApk'
//        copyForEachFile(fileArray)
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies["appcompat_v7"]
    implementation rootProject.ext.dependencies["constraint_layout"]
    //Java Library 存放jar包的库
    compileOnly project(':javaLib')
    annotationProcessor project(':libCompiler')
    implementation project(':baselib')
    implementation project(':libraries:lib_web')
}

